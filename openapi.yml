openapi: 3.0.3
info:
  title: Course Manager API
  version: v1
paths:
  /accounts:
    x-controller: accounts
    post:
      x-operation: createAccount
      tags:
        - Accounts
      summary: Create an account
      requestBody:
        $ref: '#/components/requestBodies/CreateAccount'
      responses:
        201:
          description: Account created.
        400:
          description: Invalid request.
        409:
          description: Account already exists.
  /accounts/{username}:
    x-controller: accounts
    parameters:
      - $ref: '#/components/parameters/PathAccountName'
    put:
      x-operation: modifyAccount
      tags:
        - Accounts
      security:
        - cookieAuth: []
      summary: Modify account
      requestBody:
        $ref: '#/components/requestBodies/ModifyAccount'
      responses:
        200:
          description: Account updated.
        400:
          description: Invalid request.
        401:
          description: Not authenticated.
        404:
          description: Not found.
    delete:
      x-operation: deleteAccount
      tags:
        - Accounts
      security:
        - cookieAuth: []
      summary: Delete account
      responses:
        204:
          description: Account deleted.
        401:
          description: Not authenticated.
        403:
          description: Access denied.
  /authentication/login:
    x-controller: authentication
    put:
      x-operation: login
      tags:
        - Athentication
      summary: Log in
      requestBody:
        $ref: '#/components/requestBodies/Login'
      responses:
        200:
          description: Authenticated.
        400:
          description: Invalid request.
        401:
          description: Not Authenticated.
  /authentication/logout:
    x-controller: authentication
    put:
      x-operation: logout
      tags:
        - Authentication
      summary: Log out
      responses:
        200:
          description: Logged out.
  /courses:
    x-controller: courses
    get:
      x-operation: getCourseList
      tags:
        - Courses
      security:
        - cookieAuth: []
      summary: Get courses
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courses'
        400:
          description: Invalid request.
        401:
          description: Not authenticated.
    post:
      x-operation: createCourse
      tags:
        - Courses
      security:
        - cookieAuth: []
      summary: Create a course
      requestBody:
        $ref: '#/components/requestBodies/CreateCourse'
      responses:
        201:
          description: Course created.
        400:
          description: Invalid request.
        409:
          description: Course already exists.
  /courses/{courseId}:
    parameters:
      - $ref: '#/components/parameters/PathCourseId'
    get:
      x-controller: assignments
      x-operation: getCourseAssignments
      tags:
        - Assignments
      security:
        - cookieAuth: []
      summary: Get course assignments
      parameters:
        - name: courseId
          in: query
          schema:
            type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        400:
          description: Invalid request.
        401:
          description: Not authenticated.
    post:
      x-controller: assignments
      x-operation: createAssignment
      tags:
        - Assignments
      security:
        - cookieAuth: []
      summary: Create an assignment
      requestBody:
        $ref: '#/components/requestBodies/CreateAssignment'
      responses:
        201:
          description: Assignment created.
        400:
          description: Invalid request.
        409:
          description: Account already exists.
    put:
      x-controller: courses
      x-operation: modifyCourse
      tags:
        - Courses
      security:
        - cookieAuth: []
      summary: Modify a course
      requestBody:
        $ref: '#/components/requestBodies/ModifyCourse'
      responses:
        200:
          description: Course modified.
        400:
          description: Invalid request.
        401:
          description: Not authenticated.
        403:
          description: Access denied.
        404:
          description: Not found.
    delete:
      x-controller: courses
      x-operation: deleteCourse
      tags:
        - Courses
      security:
        - cookieAuth: []
      summary: Delete a course
      responses:
        204:
          description: Course deleted.
        401:
          description: Not authenticated.
        403:
          description: Access denied.
  /courses/{courseId}/{asgmtId}:
    x-controller: assignments
    parameters:
      - $ref: '#/components/parameters/PathCourseId'
      - $ref: '#/components/parameters/PathAssignmentId'
    put:
      x-operation: modifyAssignment
      tags:
        - Assignments
      security:
        - cookieAuth: []
      summary: Modify an assignment
      requestBody:
        $ref: '#/components/requestBodies/ModifyAssignment'
      responses:
        200:
          description: Assignment modified.
        400:
          description: Invalid request.
        401:
          description: Not authenticated.
        403:
          description: Access denied.
        404:
          description: Not found.
    delete:
      x-operation: deleteAssignment
      tags:
        - Assignments
      security:
        - cookieAuth: []
      summary: Delete an assignment
      responses:
        204:
          description: Assignment deleted.
        401:
          description: Not authenticated.
        403:
          description: Access denied.
components:
  parameters:
    PathAccountName:
      name: username
      in: path
      required: true
      schema:
        type: string
    PathCourseId:
      name: courseId
      in: path
      required: true
      schema:
        type: string
    PathAssignmentId:
      name: asgmtId
      in: path
      required: true
      schema:
        type: string
  requestBodies:
    CreateAccount:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - username
              - password
            properties:
              username:
                type: string
              password:
                type: string
                format: password
          example:
            username: janedoe
            password: p@ssword
    ModifyAccount:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - password
            properties:
              password:
                type: string
                format: password
          example:
            password: newP@ssword
    Login:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - username
              - password
            properties:
              username:
                type: string
              password:
                type: string
                format: password
          example:
            username: janedoe
            password: p@ssword
    CreateCourse:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - courseName
            properties:
              courseName:
                type: string
          example:
            courseName: ITC 410
    CreateAssignment:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - asgmtName
              - dueDate
            properties:
              asgmtName:
                type: string
              dueDate:
                type: string
                format: date
            example:
              asgmtName: Ch 1 Quiz
              dueDate: 2021-01-30
    ModifyCourse:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - courseName
            properties:
              courseName:
                type: string
          example:
            courseId: '4'
            courseName: Updated Course Name
    ModifyAssignment:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - completed
            properties:
              completed:
                type: boolean
                nullable: true
          example:
            asgmtId: '3'
            completed: true
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: AMSessionId
  schemas:
    Courses:
      type: array
      items:
        type: object
        properties:
          courseid:
            type: string
            readOnly: true
          coursename:
            type: string
    Course:
      type: array
      items:
        $ref: '#/components/schemas/Assignment'
    Assignment:
      type: object
      properties:
        asgmtid:
          type: string
          readOnly: true
        courseid:
          type: string
          readOnly: true
        asgmtname:
          type: string
        duedate:
          type: string
          format: date
        completed:
          type: boolean